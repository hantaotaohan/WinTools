ru! defaults.vim                                                         " Use Enhanced Vim defaults
set mouse=                                                               " Reset the mouse setting from defaults
aug vimStartup | au! | aug END                                           " Revert last positioned jump, as it is defined below
let g:skip_defaults_vim = 1                                              " Do not source defaults.vim again (after loading this system vimrc)
"-----------------------------------------------------------------o--------------------------------------------------------------o
"                                                                                                                                
"                                                            Gvim设置                                                       
"                                                                                                                                
"-----------------------------------------------------------------o--------------------------------------------------------------o


"=================================================================================================================================
" Gvim编码配置 
"=================================================================================================================================
" 注：使用utf-8格式后，软件与程序源码、文件路径不能有中文，否则报错
set encoding=utf-8                                                       " 设置gvim内部编码，默认不更改
set fileencoding=utf-8                                                   " 设置当前文件编码，可以更改，如：gbk（同cp936）
set fileencodings=ucs-bom,utf-8,gbk,cp936,latin-1                        " 设置支持打开的文件的编码
set fileformat=unix                                                      " 设置新（当前）文件的<EOL>格式，可以更改，如：dos（windows系统常用）
set fileformats=unix,dos,mac                                             " 给出文件的<EOL>格式类型
source $VIMRUNTIME/delmenu.vim
source $VIMRUNTIME/menu.vim
language messages zh_CN.utf-8


"=================================================================================================================================
" 设置 gVim 窗口初始位置及大小 |
"=================================================================================================================================
winpos 380 240                                                           " 指定窗口出现的位置，坐标原点在屏幕左上角
set lines=30 columns=170                                                 " 指定窗口大小，lines为高度，columns为宽度


"=================================================================================================================================
" 显示/隐藏菜单栏、工具栏、滚动条，可用 F2 切换 |
"=================================================================================================================================
set guioptions=M                                                         " 去除VIN得GUI版本中得菜单栏
set guioptions=T                                                         " 去除VIN得GUI版本中得工具栏
set guioptions-=m
set guioptions-=T
map <silent> <M-F2> :if &guioptions =~# 'T' <Bar>
        \set guioptions-=T <Bar>
        \set guioptions-=m <bar>
    \else <Bar>
        \set guioptions+=T <Bar>
        \set guioptions+=m <Bar>
    \endif<CR>


"=================================================================================================================================
" 外部插件调整透明度及置顶模式 
"=================================================================================================================================
" 映射 Alt+Enter 切换全屏vim
map <A-enter> <esc>:call ToggleFullScreen()<cr>
" 切换Vim是否在最前面显示
nmap <A-0> <esc>:call SwitchVimTopMostMode()<cr>
" 增加Vim窗体的不透明度
nmap <A-=> <esc>:call SetAlpha(10)<cr>
" 增加Vim窗体的透明度
nmap <A--> <esc>:call SetAlpha(-10)<cr>
" 默认设置透明
autocmd GUIEnter * call libcallnr(g:MyVimLib, 'SetAlpha', g:VimAlpha)


"=================================================================================================================================
" Gvimfullscreen 工具配置  请确保已安装了工具
"=================================================================================================================================
" 用于 Windows Gvim 全屏窗口，可用 F11 切换
" 全屏后再隐藏菜单栏、工具栏、滚动条效果更好
" Win平台下窗口全屏组件 gvimfullscreen.dll
" Shift + Enter 全屏切换
" Alt + - 降低窗口透明度
" Alt + = 加大窗口透明度
" Alt + 0 切换Vim是否总在最前面显示
" Vim启动的时候自动使用当前颜色的背景色以去除Vim的白色边框

if has('gui_running') && has('gui_win32') && has('libcall')
    let g:MyVimLib = 'gvimfullscreen.dll'
    function! ToggleFullScreen()
        call libcall(g:MyVimLib, 'ToggleFullScreen', 1)
    endfunction

    let g:VimAlpha = 245
    function! SetAlpha(alpha)
        let g:VimAlpha = g:VimAlpha + a:alpha
        if g:VimAlpha < 80
            let g:VimAlpha = 80
        endif
        if g:VimAlpha > 255
            let g:VimAlpha = 255
        endif
        call libcall(g:MyVimLib, 'SetAlpha', g:VimAlpha)
    endfunction

    let g:VimTopMost = 0
    function! SwitchVimTopMostMode()
        if g:VimTopMost == 0
            let g:VimTopMost = 1
        else
            let g:VimTopMost = 0
        endif
        call libcall(g:MyVimLib, 'EnableTopMost', g:VimTopMost)
    endfunction
endif

" ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 


" ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
" Plug Config 
" ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
call plug#begin('$VIMRUNTIME/plugged')
Plug 'joshdick/onedark.vim'                                              " 主题文件
Plug 'vim-airline/vim-airline'                                           " 状态栏
Plug 'vim-airline/vim-airline-themes'                                    " 状态栏主题
Plug 'tpope/vim-fugitive'                                                " git插件
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }                                                " 文件树插件
Plug 'godlygeek/tabular'                                                 " 文本对齐插件
Plug 'dhruvasagar/vim-table-mode'                                        " 表格模式
Plug 'majutsushi/tagbar'                                                 " Tag浏览
Plug 'junegunn/fzf', { 'dir': '$VIMRUNTIME/plugged/.fzf', 'do': './install --all' }     " 为系统安装fzf工具
Plug 'junegunn/fzf.vim'                                                  " 为vim安装fzf插件
Plug 'skywind3000/asyncrun.vim'                                          " 配合调测python插件
Plug 'christoomey/vim-tmux-navigator'                                    " 同步vim与tmux快捷键
Plug 'Yggdroot/indentLine'                                               " 缩进线显示插件
Plug 'scrooloose/nerdcommenter'                                          " 快速注释插件
Plug 'mhinz/vim-startify'                                                " 定制vim开始页面
Plug 'SirVer/ultisnips'                                                  " 代码片段管理器
Plug 'honza/vim-snippets'                                                " 代码片段仓库
Plug 'iamcco/markdown-preview.nvim', { 'do': { -> mkdp#util#install() } }
Plug 'yianwillis/vimcdoc'
"Plug 'terryma/vim-multiple-cursors'                                     " 多光标插件
"Plug 'edkolev/tmuxline.vim'                                             " Vim同步tmux配色
call plug#end()


"=================================================================================================================================
" 界面配置 
"=================================================================================================================================
colorscheme onedark                                                      " 终端配色方案
set number                                                               " 显示行号
set laststatus=2                                                         " 启用状态栏信息
set cmdheight=1                                                          " 设置命令行的高度为2，默认为1
set cursorline                                                           " 突出显示当前行
set clipboard=unnamed                                                    " 共享剪贴板
set nowrap                                                               " 设置不自动换行
set showtabline=2                                                        " 永远显示标签页
set t_Co=256                                                             " 设置终端显示颜色
set scrolloff=5                                                          " 光标上下两侧最少保留的屏幕行数
syntax enable                                                            " 开启语法高亮
set termguicolors                                                        " 终端模式 自动转换256真色彩 
set guifont=Inziu_Iosevka_SC:b:h11:cANSI                            " 设置字体:字号（字体名称空格用下划线代替）
"=================================================================================================================================
" 基础设置
"=================================================================================================================================
filetype on                                                              " 启用文件类型侦测
filetype plugin on                                                       " 针对不同的文件类型加载对应的插件
filetype plugin indent on                                                " 启用缩进
set fileencodings=utf-8,cp936,gb18030,big5,latin1                        " 探测即将打开的文件的字符编码
set fileencoding=utf-8                                                   " 打开文件的字符编码
set encoding=utf-8                                                       " Vim 内部使用的字符编码方式
set autoindent                                                           " 代码自动对齐
set smartindent                                                          " 启用智能对齐方式
set expandtab                                                            " 将Tab键转换为空格
set tabstop=4                                                            " 设置Tab键的宽度，可以更改，如：宽度为2
set shiftwidth=4                                                         " 换行时自动缩进宽度，可更改（宽度同tabstop）
set smarttab                                                             " 指定按一次backspace就删除shiftwidth宽度
set helplang=cn                                                          " 双字宽
set showmatch                                                            " 匹配模式,括号匹配
set nocompatible                                                         " 去掉有关vi一致性模式
set backspace=indent,eol,start                                           " 设置退格键的工作方式
set hlsearch                                                             " 高亮搜索的关键字
set pythondll=""                                                         " python3.6支持
set writebackup                                                          " 保存文件前建立备份，保存成功后删除该备份
set nobackup                                                             " 设置无备份文件
set undofile                                                             " 开启撤销功能
set undodir=$VIMRUNTIME/plugged/                                         " 开启撤销功能的目录
set autoread                                                             " 当文件在外部被修改，自动更新该文件
set ignorecase                                                           " 搜索模式里忽略大小写
set smartcase                                                            " 如果搜索模式包含大写字符，不使用 'ignorecase' 选项
set autochdir                                                            " 自动切换目录 
set noswapfile                                                           " 设置无临时文件
set noshowmode                                                           " 任务栏不显示状态
set ambiwidth=single                                                     " 设置为双字宽显示默认值double
set hidden
" set timeoutlen=0                                                       " 取消延迟
" set backupdir=/etc/vim/.vim/                                           " 备份文件目录  
" set directory=/etc/vim/.vim/                                           " 交换文件目录  
" set vb t_vb=                                                           " 关闭提示音
" set noincsearch                                                        " 在输入要搜索的文字时，取消实时匹配

"=================================================================================================================================
" 折叠设置 
"=================================================================================================================================
set foldmethod=manual                                                    " 启用手动折叠zf
set viewdir=$VIMRUNTIME/plugged/                                         " view视图文件目录设定
nnoremap <silent> <Space> @=(foldlevel('.')?'za':"\<Space>")<CR>         " 空格打开关闭折叠视图
vnoremap <Space> zf                                                      " 空格打开关闭折叠视图
"---------------------------------------------------------------------------------------------------------------------------------
augroup AutoSaveFolds
autocmd!
au BufWinLeave .* mkview                                                 " 关闭时自动保存折叠视图
au BufWinEnter .* silent loadview                                        " 打开时自动读取折叠视图
augroup END


"-----------------------------------------------------------------o--------------------------------------------------------------o
"                                                                                                                                
"                                                            各类插件设置                                                       
"                                                                                                                                
"-----------------------------------------------------------------o--------------------------------------------------------------o


"=================================================================================================================================
" Airline
"=================================================================================================================================
let g:airline_theme='onedark'                                            " 设置状态栏主题默认powerlineish
let g:airline#extensions#tabline#enabled= 1                              " 开启tabline
let g:airline#extensions#tabline#show_tabs = 0                           " 显示Tabls文字
let g:airline#extensions#tabline#buffer_nr_show = 1                      " tabline中buffer显示编号
let g:airline#extensions#tabline#fnamemod = ':t'                         " 只显示文件名称
let g:airline_powerline_fonts= 1                                         " 使用powerline打过补丁的字体
let g:airline#extensions#whitespace#enabled = 0                          " 取消计数
let g:airline#extensions#tabline#buffers_label = 'Buffers'               " airline右上角定制
let g:airline#extensions#wordcount#enabled = 1                           " 开启字数统计
let g:airline#extensions#wordcount#filetypes = ['all']                   " 开启字数统计文件类型
let g:airline#extensions#wordcount#formatter#default#fmt = '%s words'    " 自定义字数统计格式
"---------------------------------------------------------------------------------------------------------------------------------
" 自定义airline c x z 区域的各项功能
let g:airline_section_c = airline#section#create(['readonly','  ','%{getcwd()}/','file'])
let g:airline_section_x = airline#section#create(['%{&filetype}'])
let g:airline_section_z = airline#section#create(['¶ %3p%','  %%  ', ' %l ' , ':%3v'])
"let g:airline_section_y = '%{strftime("%c")}'                           " 显示时间


"=================================================================================================================================
" NERDTree 插件配置
"=================================================================================================================================
nmap <F8> :NERDTreeToggle<CR>
"---------------------------------------------------------------------------------------------------------------------------------
let NERDTreeShowBookmarks=1                                              " 显示书签
let NERDTreeChDirMode=2                                                  " 是否改变PWD目录路径
let NERDTreeQuitOnOpen=0                                                 " 打开后是否关闭NT窗口
let NERDTreeMinimalUI=1                                                  " 不显示帮助面板
let NERDTreeWinSize=35                                                   " 窗口宽度
let g:NERDTreeHidden=0                                                   " 是否显示隐藏文件
let NERDTreeIgnore=['\.pyc','\~$','\.swp','_gsdata_']                    " 过滤所有指定的文件和文件夹
let g:NERDTreeShowLineNumbers=1                                          " 是否显示行号
let g:NERDTreeDirArrowExpandable = '▸'                                   " 设置树的显示图标
let g:NERDTreeDirArrowCollapsible = '▾'                                  " 设置树的显示图标
" let NERDTreeSortOrder=[1]                                              " 排序设置0 or 1
"autocmd vimenter * NERDTree                                             " 自动开启Nerdtree
"---------------------------------------------------------------------------------------------------------------------------------
"当NERDTree为剩下的唯一窗口时自动关闭
"---------------------------------------------------------------------------------------------------------------------------------
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif


"=================================================================================================================================
"  MarkdownPreview插件配置
"=================================================================================================================================
" set to 1, nvim will open the preview window after entering the markdown buffer
" default: 0
let g:mkdp_auto_start = 0

" set to 1, the nvim will auto close current preview window when change
" from markdown buffer to another buffer
" default: 1
let g:mkdp_auto_close = 1

" set to 1, the vim will refresh markdown when save the buffer or
" leave from insert mode, default 0 is auto refresh markdown as you edit or
" move the cursor
" default: 0
let g:mkdp_refresh_slow = 0

" set to 1, the MarkdownPreview command can be use for all files,
" by default it can be use in markdown file
" default: 0
let g:mkdp_command_for_global = 1

" set to 1, preview server available to others in your network
" by default, the server listens on localhost (127.0.0.1)
" default: 0
let g:mkdp_open_to_the_world = 1

" use custom IP to open preview page
" useful when you work in remote vim and preview on local browser
" default empty
let g:mkdp_open_ip = ''

" specify browser to open preview page
" default: ''
let g:mkdp_browser = ''

" set to 1, echo preview page url in command line when open preview page
" default is 0
let g:mkdp_echo_preview_url = 1

" a custom vim function name to open preview page
" this function will receive url as param
" default is empty
let g:mkdp_browserfunc = ''

" options for markdown render
let g:mkdp_preview_options = {
    \ 'mkit': {},
    \ 'katex': {},
    \ 'uml': {},
    \ 'maid': {},
    \ 'disable_sync_scroll': 0,
    \ 'sync_scroll_type': 'middle',
    \ 'hide_yaml_meta': 1,
    \ 'sequence_diagrams': {}
    \ }

" use a custom markdown style must be absolute path
let g:mkdp_markdown_css = ''

" use a custom highlight style must absolute path
let g:mkdp_highlight_css = ''

" use a custom port to start server or random for empty
let g:mkdp_port = '8888'

" preview page title
" ${name} will be replace with the file name
let g:mkdp_page_title = '「${name}」'

" MarkdownPreviewToggle
nmap <Leader>] <Plug>MarkdownPreviewToggle


"=================================================================================================================================
" Vim-table-mode 插件配置
"=================================================================================================================================
" 快速制作表格
" <Leader> = \
" <Leader>tm  table mode 开关
" <Leader>tdd 删除一行
" <Leader>tdc 删除一列
" <Leader>tt 使用定义的分隔符插入表格
" <Leader>T 使用用户输入的分隔符插入表格
" <Leader>tr 重新对齐
" <Leader>|| 插入表头边框
" let g:table_mode_border=0
" let g:table_mode_fillchar=' '
" let g:table_mode_delimiter = ' '                                       " 定义分隔符插入表格
let g:table_mode_corner = '|'


"=================================================================================================================================
" Tagbar   
"=================================================================================================================================
noremap <F9> :TagbarToggle<CR>                                           " F9打开关闭Tagbar
let g:tagbar_autofocus = 1                                               " 焦点自动聚焦到Tagbar
let g:tagbar_ctags_bin = "$VIMRUNTIME/ctags/ctags.exe"           " ctags目录位置


"=================================================================================================================================
" Markdown2-Ctags
"=================================================================================================================================
" 让Tagbar支持markdown格式的Tags
"---------------------------------------------------------------------------------------------------------------------------------
let g:tagbar_type_markdown = {
    \ 'ctagstype': 'markdown',
    \ 'ctagsbin' : '$VIMRUNTIME/ctags/markdown2ctags.py',
    \ 'ctagsargs' : '-f - --sort=yes --sro=»',
    \ 'kinds' : [
        \ 's:sections',
        \ 'i:images'
    \ ],
    \ 'sro' : '»',
    \ 'kind2scope' : {
        \ 's' : 'section',
    \ },
    \ 'sort': 0,
\ }


"=================================================================================================================================
" FZF.vim 
"=================================================================================================================================
nnoremap <silent> <Leader>f :Files /<CR>
nnoremap <silent> <Leader>ff :Lines<CR>
nnoremap <Leader>s :Rg 


"=================================================================================================================================
" asyncru
"=================================================================================================================================
noremap <F7> :call asyncrun#quickfix_toggle(6)<cr>
inoremap <F7> <esc> :call asyncrun#quickfix_toggle(6)<cr>


"=================================================================================================================================
" indentLine
"=================================================================================================================================
let g:indentLine_enabled = 0
noremap <F12> :IndentLinesToggle<CR>
inoremap <F12> <esc> :IndentLinesToggle<CR>


"=================================================================================================================================
" vim-startify
"=================================================================================================================================
let g:startify_change_to_vcs_root = 1
let g:startify_files_number = 6

let g:startify_list_order = [
    \ ['   Recent files in this directory:'],
    \ 'dir',
    \ ['   Recent files:'],
    \ 'files',
    \ ['   Bookmarks:'],
    \ 'bookmarks',
    \ ]

let g:startify_skiplist = [
    \ 'COMMIT_EDITMSG',
    \ ]

let g:startify_bookmarks = [
    \ { 'v': '/etc/vim/vimrc' },
    \ ]

let g:startify_custom_footer = [
    \ '    +------------------------------+',
    \ '    |     Keep an open mind!       |',
    \ '    +----------------+-------------+',
    \]


"-----------------------------------------------------------------o--------------------------------------------------------------o
"                                                                                                                                
"                                                             快捷键设置                                                         
"                                                                                                                                
"-----------------------------------------------------------------o--------------------------------------------------------------o


"=================================================================================================================================
" Leader(\)+ 123....  切换Buffers快捷键设置
"=================================================================================================================================
noremap <Leader>a :badd<Space>
noremap <leader>d :bdelete<Space>
noremap <silent><leader>1 :b1<cr>
noremap <silent><leader>2 :b2<cr>
noremap <silent><leader>3 :b3<cr>
noremap <silent><leader>4 :b4<cr>
noremap <silent><leader>5 :b5<cr>
noremap <silent><leader>6 :b6<cr>
noremap <silent><leader>7 :b7<cr>
noremap <silent><leader>8 :b8<cr>
noremap <silent><leader>9 :b9<cr>
noremap <silent><leader>0 :b10<cr>
noremap <silent><leader><tab> :bnext<CR>
inoremap <silent><leader><tab> <ESC>:bnext<CR>


"=================================================================================================================================
" Leader(\)+ 123....  切换Tabs快捷键设置 
"=================================================================================================================================
" noremap <silent><leader>n :tabnew<cr>
" noremap <silent><leader>c :tabclose<cr>
" noremap <silent><leader>1 :tabn 1<cr>
" noremap <silent><leader>2 :tabn 2<cr>
" noremap <silent><leader>3 :tabn 3<cr>
" noremap <silent><leader>4 :tabn 4<cr>
" noremap <silent><leader>5 :tabn 5<cr>
" noremap <silent><leader>6 :tabn 6<cr>
" noremap <silent><leader>7 :tabn 7<cr>
" noremap <silent><leader>8 :tabn 8<cr>
" noremap <silent><leader>9 :tabn 9<cr>
" noremap <silent><leader>0 :tabn 10<cr>
" noremap <silent><leader><tab> :tabnext<CR>
" inoremap <silent><leader><tab> <ESC>:tabnext<CR>


"================================================================================================================================= 
" Ctrl + n 切换buff快捷键 
"=================================================================================================================================
" noremap <c-e> :bp!<CR>
" inoremap <c-e> <esc> :bp!<CR>


"=================================================================================================================================
" Ctrl + h j k l 切换窗口快捷键设置  
"=================================================================================================================================
" 设置Alt快捷方式为 进入编辑模式后 ctrl+v 再按 alt+某键即可
"=================================================================================================================================
noremap <c-h> <c-w>h
noremap <c-l> <c-w>l
noremap <c-j> <c-w>j
noremap <c-k> <c-w>k
inoremap <c-h> <esc><c-w>h
inoremap <c-l> <esc><c-w>l
inoremap <c-j> <esc><c-w>j
inoremap <c-k> <esc><c-w>k


"================================================================================================================================= 
" 快速移动光标快捷键 
"=================================================================================================================================
" 普通模式下:Shift+HJKL快速移动
" nnoremap K <Esc>5<up>
" nnoremap J <Esc>5<down>
" nnoremap H <Esc>0
" nnoremap L <Esc>$

" 编辑模式下:Alt+Shift+hjkl加速移动
" inoremap <C-H> <ESC>I
" inoremap <C-J> <down><down><down><down><down>
" inoremap <C-K> <up><up><up><up><up>
" inoremap <C-L> <ESC>A

" 可视化模式下:Shift+HJKL快速移动
" vnoremap K 5<up>
" vnoremap J 5<down>
" vnoremap H 0
" vnoremap L $


"=================================================================================================================================
" Shift + - = , . 调整窗口高低宽窄快捷键 
"=================================================================================================================================
noremap <silent><leader>j <C-W>:resize           +2<CR>
noremap <silent><leader>k <C-W>:resize           -2<CR>
noremap <silent><leader>h <C-W>:vertical resize  +4<CR>
noremap <silent><leader>l <C-W>:vertical resize  -4<CR>


"=================================================================================================================================
" Ctrl + n 开关显示绝对/相对行号显示
" 设定相对行号和绝对行号显示问题 编辑模式=绝对行号 普通模式=相对行号 Ctrl+n 切换
" 相对行号: 行号变成相对，可以用 nj/nk 进行跳转
"=================================================================================================================================
set relativenumber number
au FocusLost * :set norelativenumber number
au FocusGained * :set relativenumber
" 插入模式下用绝对行号, 普通模式下用相对
autocmd InsertEnter * :set norelativenumber number
autocmd InsertLeave * :set relativenumber
function! NumberToggle()
if(&relativenumber == 1)
set norelativenumber number
else
set relativenumber
endif
endfunc
nnoremap <C-n> :call NumberToggle()<cr>


"=================================================================================================================================
" F2 行号开关，用于鼠标复制代码用
" 为方便复制，用<F2>开启/关闭行号显示:
"=================================================================================================================================
function! HideNumber()
if(&relativenumber == &number)
set relativenumber! number!
elseif(&number)
set number!
else
set relativenumber!
endif
set number?
endfunc
nnoremap <F2> :call HideNumber()<CR>


"=================================================================================================================================
" F3 语法开关，关闭语法可以加快大文件的展示
"=================================================================================================================================
nnoremap <F3> :exec exists('syntax_on') ? 'syn off' : 'syn on'<CR>


"=================================================================================================================================
" F4 粘贴模式开关
"=================================================================================================================================
set pastetoggle=<F4>                                                     " 设置粘贴模式 <F4>切换


"=================================================================================================================================
" Quit Term Alt+Q 
"=================================================================================================================================
tnoremap q <c-\><c-n>


"================================================================================================================================= 
" 非root权限保存快捷命令 命令模式下输入:W
"=================================================================================================================================
command W w !sudo tee % > /dev/null


"-----------------------------------------------------------------o--------------------------------------------------------------o
"                                                                                                                                
"                                                              其他设置                                                          
"                                                                                                                                
"-----------------------------------------------------------------o--------------------------------------------------------------o


"=================================================================================================================================
" Python
"-----------------------------------------------------------------o--------------------------------------------------------------o
" F5 开启Quitfix 调测
" F6 开启Term    调测
"=================================================================================================================================
" 窗口位置参数可选 leftabove aboveleft rightbelow belowright topleft botright
" 分割位置参数 vert splitbelow
" autocmd BufRead *.py nmap <F5> :rightbelow vert term python3 "%"<CR>
"=================================================================================================================================
" autocmd BufRead *.py nmap <F5> :botright term exec "w" python3 "%"<CR>
" autocmd BufRead *.py nmap <F6> :make<CR>
" autocmd BufRead *.py :cclose
"=================================================================================================================================
nnoremap <F5> :call CompileRunGcc1()<cr>
func! CompileRunGcc1()
    exec "w"
    if &filetype == 'python'
        if search("@profile")
            exec "AsyncRun kernprof -l -v %"
            exec "copen"
            exec "wincmd p"
        elseif search("set_trace()")
            exec "!python %"
        else
            exec "AsyncRun -raw python %"
            exec "copen"
            exec "wincmd p"
        endif
    endif
endfunc
"=================================================================================================================================
map <F6> :call CompileRunGcc2()<CR>
func! CompileRunGcc2()
    exec "w"
    if &filetype == 'python'
        exec "!clear"
        exec "!time python %"
    elseif &filetype == 'sh'
        :!time bash %
    endif
endfunc


"=================================================================================================================================
" 自动切换目录为当前编辑文件所在目录
"=================================================================================================================================
au BufRead,BufNewFile,BufEnter * cd %:p:h


"=================================================================================================================================
" 退出再次进入后自动进入光标之前所在的位置
"=================================================================================================================================
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif


"=================================================================================================================================
" Term设置 
"=================================================================================================================================
noremap <c-`> :belowright term <cr>
if has('terminal') && exists(':terminal') == 2 && has('patch-8.1.1')
	" vim 8.1 支持 termwinkey ，不需要把 terminal 切换成 normal 模式
	" 设置 termwinkey 为 CTRL 加减号（GVIM），有些终端下是 CTRL+?
	" 后面四个键位是搭配 termwinkey 的，如果 termwinkey 更改，也要改
	set termwinkey=<c-_>
	tnoremap <c-h> <c-_>h
	tnoremap <c-l> <c-_>l
	tnoremap <c-j> <c-_>j
	tnoremap <c-k> <c-_>k
	tnoremap <c-q> <c-\><c-n>
    tnoremap <c-`> <c-\><c-n>:q!<CR>
endif
